// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ContractConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ContractConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ContractConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContractConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContractConfig_ContractItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContractConfig_ContractItem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ContractConfig_2eproto() {
  protobuf_AddDesc_ContractConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ContractConfig.proto");
  GOOGLE_CHECK(file != NULL);
  ContractConfig_descriptor_ = file->message_type(0);
  static const int ContractConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig, contracts_),
  };
  ContractConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContractConfig_descriptor_,
      ContractConfig::default_instance_,
      ContractConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContractConfig));
  ContractConfig_ContractItem_descriptor_ = ContractConfig_descriptor_->nested_type(0);
  static const int ContractConfig_ContractItem_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, contractname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, contractcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, begintime1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, endtime1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, begindate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, enddate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, begintime2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, endtime2_),
  };
  ContractConfig_ContractItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContractConfig_ContractItem_descriptor_,
      ContractConfig_ContractItem::default_instance_,
      ContractConfig_ContractItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContractConfig_ContractItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContractConfig_ContractItem));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ContractConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContractConfig_descriptor_, &ContractConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContractConfig_ContractItem_descriptor_, &ContractConfig_ContractItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ContractConfig_2eproto() {
  delete ContractConfig::default_instance_;
  delete ContractConfig_reflection_;
  delete ContractConfig_ContractItem::default_instance_;
  delete ContractConfig_ContractItem_reflection_;
}

void protobuf_AddDesc_ContractConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ContractConfig.proto\"\356\001\n\016ContractConfi"
    "g\022/\n\tcontracts\030\t \003(\0132\034.ContractConfig.Co"
    "ntractItem\032\252\001\n\014ContractItem\022\024\n\014ContractN"
    "ame\030\001 \001(\t\022\024\n\014ContractCode\030\002 \001(\t\022\022\n\nBegin"
    "Time1\030\003 \001(\t\022\020\n\010EndTime1\030\004 \001(\t\022\021\n\tBeginDa"
    "te\030\005 \001(\t\022\017\n\007EndDate\030\006 \001(\t\022\022\n\nBeginTime2\030"
    "\007 \001(\t\022\020\n\010EndTime2\030\010 \001(\t", 263);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ContractConfig.proto", &protobuf_RegisterTypes);
  ContractConfig::default_instance_ = new ContractConfig();
  ContractConfig_ContractItem::default_instance_ = new ContractConfig_ContractItem();
  ContractConfig::default_instance_->InitAsDefaultInstance();
  ContractConfig_ContractItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ContractConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ContractConfig_2eproto {
  StaticDescriptorInitializer_ContractConfig_2eproto() {
    protobuf_AddDesc_ContractConfig_2eproto();
  }
} static_descriptor_initializer_ContractConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ContractConfig_ContractItem::kContractNameFieldNumber;
const int ContractConfig_ContractItem::kContractCodeFieldNumber;
const int ContractConfig_ContractItem::kBeginTime1FieldNumber;
const int ContractConfig_ContractItem::kEndTime1FieldNumber;
const int ContractConfig_ContractItem::kBeginDateFieldNumber;
const int ContractConfig_ContractItem::kEndDateFieldNumber;
const int ContractConfig_ContractItem::kBeginTime2FieldNumber;
const int ContractConfig_ContractItem::kEndTime2FieldNumber;
#endif  // !_MSC_VER

ContractConfig_ContractItem::ContractConfig_ContractItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ContractConfig.ContractItem)
}

void ContractConfig_ContractItem::InitAsDefaultInstance() {
}

ContractConfig_ContractItem::ContractConfig_ContractItem(const ContractConfig_ContractItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ContractConfig.ContractItem)
}

void ContractConfig_ContractItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  contractname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contractcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begintime1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtime1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begindate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enddate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  begintime2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtime2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContractConfig_ContractItem::~ContractConfig_ContractItem() {
  // @@protoc_insertion_point(destructor:ContractConfig.ContractItem)
  SharedDtor();
}

void ContractConfig_ContractItem::SharedDtor() {
  if (contractname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete contractname_;
  }
  if (contractcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete contractcode_;
  }
  if (begintime1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete begintime1_;
  }
  if (endtime1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime1_;
  }
  if (begindate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete begindate_;
  }
  if (enddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete enddate_;
  }
  if (begintime2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete begintime2_;
  }
  if (endtime2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime2_;
  }
  if (this != default_instance_) {
  }
}

void ContractConfig_ContractItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContractConfig_ContractItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContractConfig_ContractItem_descriptor_;
}

const ContractConfig_ContractItem& ContractConfig_ContractItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ContractConfig_2eproto();
  return *default_instance_;
}

ContractConfig_ContractItem* ContractConfig_ContractItem::default_instance_ = NULL;

ContractConfig_ContractItem* ContractConfig_ContractItem::New() const {
  return new ContractConfig_ContractItem;
}

void ContractConfig_ContractItem::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_contractname()) {
      if (contractname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        contractname_->clear();
      }
    }
    if (has_contractcode()) {
      if (contractcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        contractcode_->clear();
      }
    }
    if (has_begintime1()) {
      if (begintime1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        begintime1_->clear();
      }
    }
    if (has_endtime1()) {
      if (endtime1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        endtime1_->clear();
      }
    }
    if (has_begindate()) {
      if (begindate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        begindate_->clear();
      }
    }
    if (has_enddate()) {
      if (enddate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        enddate_->clear();
      }
    }
    if (has_begintime2()) {
      if (begintime2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        begintime2_->clear();
      }
    }
    if (has_endtime2()) {
      if (endtime2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        endtime2_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContractConfig_ContractItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ContractConfig.ContractItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ContractName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->contractname().data(), this->contractname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "contractname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ContractCode;
        break;
      }

      // optional string ContractCode = 2;
      case 2: {
        if (tag == 18) {
         parse_ContractCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->contractcode().data(), this->contractcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "contractcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_BeginTime1;
        break;
      }

      // optional string BeginTime1 = 3;
      case 3: {
        if (tag == 26) {
         parse_BeginTime1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_begintime1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->begintime1().data(), this->begintime1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "begintime1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_EndTime1;
        break;
      }

      // optional string EndTime1 = 4;
      case 4: {
        if (tag == 34) {
         parse_EndTime1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endtime1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endtime1().data(), this->endtime1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "endtime1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_BeginDate;
        break;
      }

      // optional string BeginDate = 5;
      case 5: {
        if (tag == 42) {
         parse_BeginDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_begindate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->begindate().data(), this->begindate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "begindate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_EndDate;
        break;
      }

      // optional string EndDate = 6;
      case 6: {
        if (tag == 50) {
         parse_EndDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enddate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->enddate().data(), this->enddate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "enddate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_BeginTime2;
        break;
      }

      // optional string BeginTime2 = 7;
      case 7: {
        if (tag == 58) {
         parse_BeginTime2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_begintime2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->begintime2().data(), this->begintime2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "begintime2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_EndTime2;
        break;
      }

      // optional string EndTime2 = 8;
      case 8: {
        if (tag == 66) {
         parse_EndTime2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endtime2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endtime2().data(), this->endtime2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "endtime2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ContractConfig.ContractItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ContractConfig.ContractItem)
  return false;
#undef DO_
}

void ContractConfig_ContractItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ContractConfig.ContractItem)
  // optional string ContractName = 1;
  if (has_contractname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contractname().data(), this->contractname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "contractname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->contractname(), output);
  }

  // optional string ContractCode = 2;
  if (has_contractcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contractcode().data(), this->contractcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "contractcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contractcode(), output);
  }

  // optional string BeginTime1 = 3;
  if (has_begintime1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begintime1().data(), this->begintime1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begintime1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->begintime1(), output);
  }

  // optional string EndTime1 = 4;
  if (has_endtime1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endtime1().data(), this->endtime1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endtime1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->endtime1(), output);
  }

  // optional string BeginDate = 5;
  if (has_begindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begindate().data(), this->begindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begindate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->begindate(), output);
  }

  // optional string EndDate = 6;
  if (has_enddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enddate().data(), this->enddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "enddate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->enddate(), output);
  }

  // optional string BeginTime2 = 7;
  if (has_begintime2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begintime2().data(), this->begintime2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begintime2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->begintime2(), output);
  }

  // optional string EndTime2 = 8;
  if (has_endtime2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endtime2().data(), this->endtime2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endtime2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->endtime2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ContractConfig.ContractItem)
}

::google::protobuf::uint8* ContractConfig_ContractItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ContractConfig.ContractItem)
  // optional string ContractName = 1;
  if (has_contractname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contractname().data(), this->contractname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "contractname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->contractname(), target);
  }

  // optional string ContractCode = 2;
  if (has_contractcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->contractcode().data(), this->contractcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "contractcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contractcode(), target);
  }

  // optional string BeginTime1 = 3;
  if (has_begintime1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begintime1().data(), this->begintime1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begintime1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->begintime1(), target);
  }

  // optional string EndTime1 = 4;
  if (has_endtime1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endtime1().data(), this->endtime1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endtime1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->endtime1(), target);
  }

  // optional string BeginDate = 5;
  if (has_begindate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begindate().data(), this->begindate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begindate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->begindate(), target);
  }

  // optional string EndDate = 6;
  if (has_enddate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enddate().data(), this->enddate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "enddate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->enddate(), target);
  }

  // optional string BeginTime2 = 7;
  if (has_begintime2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->begintime2().data(), this->begintime2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "begintime2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->begintime2(), target);
  }

  // optional string EndTime2 = 8;
  if (has_endtime2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endtime2().data(), this->endtime2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endtime2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->endtime2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ContractConfig.ContractItem)
  return target;
}

int ContractConfig_ContractItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string ContractName = 1;
    if (has_contractname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contractname());
    }

    // optional string ContractCode = 2;
    if (has_contractcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contractcode());
    }

    // optional string BeginTime1 = 3;
    if (has_begintime1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->begintime1());
    }

    // optional string EndTime1 = 4;
    if (has_endtime1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endtime1());
    }

    // optional string BeginDate = 5;
    if (has_begindate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->begindate());
    }

    // optional string EndDate = 6;
    if (has_enddate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enddate());
    }

    // optional string BeginTime2 = 7;
    if (has_begintime2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->begintime2());
    }

    // optional string EndTime2 = 8;
    if (has_endtime2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endtime2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContractConfig_ContractItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContractConfig_ContractItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContractConfig_ContractItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContractConfig_ContractItem::MergeFrom(const ContractConfig_ContractItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_contractname()) {
      set_contractname(from.contractname());
    }
    if (from.has_contractcode()) {
      set_contractcode(from.contractcode());
    }
    if (from.has_begintime1()) {
      set_begintime1(from.begintime1());
    }
    if (from.has_endtime1()) {
      set_endtime1(from.endtime1());
    }
    if (from.has_begindate()) {
      set_begindate(from.begindate());
    }
    if (from.has_enddate()) {
      set_enddate(from.enddate());
    }
    if (from.has_begintime2()) {
      set_begintime2(from.begintime2());
    }
    if (from.has_endtime2()) {
      set_endtime2(from.endtime2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContractConfig_ContractItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractConfig_ContractItem::CopyFrom(const ContractConfig_ContractItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractConfig_ContractItem::IsInitialized() const {

  return true;
}

void ContractConfig_ContractItem::Swap(ContractConfig_ContractItem* other) {
  if (other != this) {
    std::swap(contractname_, other->contractname_);
    std::swap(contractcode_, other->contractcode_);
    std::swap(begintime1_, other->begintime1_);
    std::swap(endtime1_, other->endtime1_);
    std::swap(begindate_, other->begindate_);
    std::swap(enddate_, other->enddate_);
    std::swap(begintime2_, other->begintime2_);
    std::swap(endtime2_, other->endtime2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContractConfig_ContractItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContractConfig_ContractItem_descriptor_;
  metadata.reflection = ContractConfig_ContractItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ContractConfig::kContractsFieldNumber;
#endif  // !_MSC_VER

ContractConfig::ContractConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ContractConfig)
}

void ContractConfig::InitAsDefaultInstance() {
}

ContractConfig::ContractConfig(const ContractConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ContractConfig)
}

void ContractConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContractConfig::~ContractConfig() {
  // @@protoc_insertion_point(destructor:ContractConfig)
  SharedDtor();
}

void ContractConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ContractConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContractConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContractConfig_descriptor_;
}

const ContractConfig& ContractConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ContractConfig_2eproto();
  return *default_instance_;
}

ContractConfig* ContractConfig::default_instance_ = NULL;

ContractConfig* ContractConfig::New() const {
  return new ContractConfig;
}

void ContractConfig::Clear() {
  contracts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContractConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ContractConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ContractConfig.ContractItem contracts = 9;
      case 9: {
        if (tag == 74) {
         parse_contracts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contracts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_contracts;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ContractConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ContractConfig)
  return false;
#undef DO_
}

void ContractConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ContractConfig)
  // repeated .ContractConfig.ContractItem contracts = 9;
  for (int i = 0; i < this->contracts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->contracts(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ContractConfig)
}

::google::protobuf::uint8* ContractConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ContractConfig)
  // repeated .ContractConfig.ContractItem contracts = 9;
  for (int i = 0; i < this->contracts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->contracts(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ContractConfig)
  return target;
}

int ContractConfig::ByteSize() const {
  int total_size = 0;

  // repeated .ContractConfig.ContractItem contracts = 9;
  total_size += 1 * this->contracts_size();
  for (int i = 0; i < this->contracts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contracts(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContractConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContractConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContractConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContractConfig::MergeFrom(const ContractConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  contracts_.MergeFrom(from.contracts_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContractConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractConfig::CopyFrom(const ContractConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractConfig::IsInitialized() const {

  return true;
}

void ContractConfig::Swap(ContractConfig* other) {
  if (other != this) {
    contracts_.Swap(&other->contracts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ContractConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContractConfig_descriptor_;
  metadata.reflection = ContractConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
